package ${package}.service.${moduleName}.impl;


import ${package}.${moduleName}.dto.${className}QueryDTO;
import ${package}.${moduleName}.dto.${className}InsertDTO;
import ${package}.${moduleName}.dto.${className}UpdateDTO;
import ${package}.${moduleName}.vo.${className}VO;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.mapper.${className}Mapper;
import ${package}.service.${moduleName}.${className}Service;
import com.shebao.framework.util.bean.ResultData;
import org.springframework.stereotype.Service;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import lombok.extern.slf4j.Slf4j;

import java.util.List;


@Service
@Slf4j
public class ${className}ServiceImpl  implements ${className}Service {

    @Autowired
    ${className}Mapper ${classname}Mapper;




    @Override
    public ResultData<List<${className}VO>> queryListForPage(${className}QueryDTO ${classname}QueryDTO) {
        List<${className}VO> list = ${classname}Mapper.queryListForPage(${classname}QueryDTO);
        return ResultData.success("", list);
    }

    @Override
    public ResultData<${className}VO> queryInfo(${className}QueryDTO ${classname}QueryDTO) {
            ${className}VO ${classname}VO = ${classname}Mapper.queryInfo(${classname}QueryDTO);
        return ResultData.success("", ${classname}VO);
    }

    @Override
    public ResultData<Integer> insert(${className}InsertDTO ${classname}InsertDTO) {
        ${className} ${classname} = new ${className}();
        BeanUtils.copyProperties(${classname}InsertDTO, ${classname});
        Integer insert =  ${classname}Mapper.insert(${classname});
        return ResultData.success("", insert);
    }

    @Override
    public ResultData<Integer> insertSelective(${className}InsertDTO ${classname}InsertDTO) {
        ${className} ${classname} = new ${className}();
        BeanUtils.copyProperties(${classname}InsertDTO, ${classname});
        Integer insert =${classname}Mapper.insertSelective(${classname});
        return ResultData.success("", insert);
    }

    @Override
    public ResultData<Integer> updateById(${className}UpdateDTO ${classname}UpdateDTO) {
        ${className} ${classname} = new ${className}();
        BeanUtils.copyProperties(${classname}UpdateDTO, ${classname});
        Integer update =${classname}Mapper.updateById(${classname});
        return ResultData.success("", update);
    }


    @Override
    public ResultData<Integer> queryCount(${className}QueryDTO ${classname}QueryDTO) {
        Integer count = ${classname}Mapper.queryCount(${classname}QueryDTO);
        return ResultData.success("", count);
    }
}
